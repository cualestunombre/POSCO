spring:
   application:
      name: mysite
   profiles:
      active: development



---
# common configuration
mysite:
   static:
      pathBase: /assets

spring:
   mvc:
      static-path-pattern: ${mysite.static.pathBase}/**
      throw-exception-if-no-handler-found: true

   # 다음은 resource handler를 등록한 것이나 마찬가지가 된다
   web:
      resources:
         static-locations: classpath:${mysite.static.pathBase}, file:${mysite.upload.location}

   thymeleaf:
      prefix: classpath:templates/
      check-template-location: true
      mode: HTML
      suffix: .html
      
   servlet:
      multipart:
         enabled: true
         max-file-size: 20MB
         max-request-size: 100MB

mybatis:
   config-location: classpath:mybatis/configuration.xml

server:
   error:
      whitelabel:
         enabled: false
         path: /error	  

   servlet:
      context-path: /
      encoding:
         charset: utf-8
         enabled: true



---
# development configuration
spring:
   config:
      activate:
         on-profile: development

   devtools:
      livereload:
         enabled: true

   thymeleaf:
      cache: false

   datasource:
      driver-class-name: org.mariadb.jdbc.Driver
      url: jdbc:mariadb://192.168.64.8:3306/webdb?charset=utf8
      username: webdb
      password: webdb
      hikari:
         minimum-idle: 10
         maximum-pool-size: 20      

server:
   port: 8080

logging:
   pattern:
      console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n"
   level:
      root: INFO         

mysite:
   upload:
      location: /Users/woo/upload



---
# production profile configuration
spring:
   config:
      activate:
         on-profile: production

   datasource:
      driver-class-name: org.mariadb.jdbc.Driver
      url: jdbc:mariadb://192.168.64.8:3306/webdb?charset=utf8
      username: webdb
      password: webdb
      hikari:
         minimum-idle: 10
         maximum-pool-size: 20  

server:
   port: 8086

logging:
   pattern:
      file: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n"
   logback:
      rollingpolicy:
         file-name-pattern: "logs/${spring.application.name}.%d{yyyy-MM-dd}.%i.log.zip"
         max-file-size: 10MB
         max-history: 10
   file:
      name: logs/${spring.application.name}.log
   level:
      root: WARN
      com:
         poscodx:
            mysite:
               exception: ERROR

mysite:
   upload:
      location: /mysite-uploads

